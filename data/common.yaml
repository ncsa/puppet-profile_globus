---
lookup_options:
  profile_globus::telegraf::gridftp_log_parse::script_cfg:
    merge:
      strategy: "deep"

profile_globus::firewall::dports:
  - "443"
  - "50000-51000"
profile_globus::firewall::proto: "tcp"
profile_globus::firewall::sources:
  - "0.0.0.0/0"

profile_globus::gridmap::crons:
  "SYNC gridmap file for gcs":
    command: "/root/cron_scripts/oauth-mapfile_stage.sh && /root/cron_scripts/oauth-mapfile_sync.sh"
    minute: "*/20"

profile_globus::gridmap::files:
  "/root/cron_scripts/oauth-mapfile_stage.sh":
    content: |
      #! /bin/bash
      # This file is managed by Puppet - Changes may be overwritten
      set -e
      SRCFILES="/delta/home/sw/admin/grid-security/oauth-mapfile.cron"
      DESTFILE="/etc/globus/oauth-mapfile.stage"
      # FILTER RECORDS WITHOUT DOUBLE QUOTES, SORT BY MAPPED USERNAME AT END OF LINE
      cat ${SRCFILES} | grep '\"' | awk '{print $NF,$0}' | sort | cut -f2- -d' ' | uniq > ${DESTFILE}
    mode: "0700"

  "/root/cron_scripts/oauth-mapfile_sync.sh":
    content: |
      #! /bin/bash
      # This file is managed by Puppet - Changes may be overwritten
      set -e
      SRCFILE="/etc/globus/oauth-mapfile.stage"
      DESTFILE="/etc/globus/oauth-mapfile"
      SIZE_DIFF="2/3"
      if ! diff ${SRCFILE} ${DESTFILE} >/dev/null 2>&1 ; then
        if [ -f "${DESTFILE}" ]; then
          # ONLY COPY IF SRCFILE IS >= 2/3 of DESTFILE SIZE
          MINSIZE=$(bc <<< "$(stat --printf=%s ${DESTFILE})*${SIZE_DIFF}")
          rsync -q --min-size=${MINSIZE} ${SRCFILE} ${DESTFILE}
        else
          rsync -q ${SRCFILE} ${DESTFILE}
        fi
      fi
      chmod 0444 ${DESTFILE}
      if ! diff ${SRCFILE} ${DESTFILE} >/dev/null 2>&1 ; then
        echo "Error: The files did not sync:"
        ls -lh ${SRCFILE}
        ls -lh ${DESTFILE}
      fi
    mode: "0700"

profile_globus::logging::gridftp_enable: true
profile_globus::logging::gridftp_logrotate_manage: true
profile_globus::logging::system_tag: null
profile_globus::logging::logging_config_gridftp: |
  module (load="imfile" mode="inotify")
  input(type="imfile"
          File="/var/log/gridftp.log"
          Tag="gridftp_mg:"
          Facility="local6"
          Severity="info"
  #       Ruleset="default"
          PersistStateInterval="1000"
          freshStartTail="on")

profile_globus::telegraf::gridftp_log_parse::enabled: true
profile_globus::telegraf::gridftp_log_parse::required_pkgs:
  - "curl"
profile_globus::telegraf::gridftp_log_parse::script_cfg:
  log_file_path: "/var/log/gridftp.log"
  endpoint: ""  # Name of globus endpoint, ex : iccp
  default_lat: "40.0951283"    # Default to NCSA
  default_long: "-88.2420909"  # Default to NCSA
profile_globus::telegraf::gridftp_log_parse::telegraf_cfg:
  data_format: "influx"
  interval: "1m"
  timeout: "30s"
